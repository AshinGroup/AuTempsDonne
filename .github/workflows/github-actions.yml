name: Build Docker Container

on:
  push:
    branches:
      - release-test

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker images
      uses: docker/build-push-action@v3.2.0
      with:
        context: ./api
        file: ./api/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/au-temps-donne:api-flask

  build-web:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker images
      uses: docker/build-push-action@v3.2.0
      with:
        context: ./web
        file: ./web/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/au-temps-donne:web

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-web]

    steps:

    - name: copy files to target server via scp
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        port: 22
        password: ${{ secrets.DEPLOY_PASSWORD }}
        source: "."
        target: "~/home/atd/"

    - name: remote docker-compose up via ssh
      uses: appleboy/ssh-action@v0.1.5
      env:
        APPTOKEN: ${{ secrets.GITHUB_TOKEN }}
        USERNAME: ${{ secrets.DEPLOY_USERNAME }}
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        password: ${{ secrets.DEPLOY_PASSWORD }}
        port: 22
        envs: APPTOKEN,USERNAME
        script: |
          cd /home/atd
          mkdir sql
          mv init.sql /sql
          docker compose -f docker-compose-prod.yml up --build -d



        