services:
  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - ${MYSQL_PORT}:3306
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "--silent"
        ]
      interval: 5s
      timeout: 3s
      retries: 4
      start_period: 20s
    volumes:
      - ./data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    build:
      context: api
      dockerfile: Dockerfile
      args:
        ENV: ${FLASK_PORT}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      FLASK_PORT: ${FLASK_PORT}
      API_PATH: ${API_PATH}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GEOCODING_API_KEY: ${GEOCODING_API_KEY}
      OPRS_API_KEY: ${OPRS_API_KEY}
      GEOAPIFY_API_KEY: ${GEOAPIFY_API_KEY}
    ports:
      - ${FLASK_PORT}:5000

  frontend:
    build:
      context: web
      dockerfile: Dockerfile
      args:
        ENV: ${REACT_PORT}
    ports:
      - ${REACT_PORT}:3000
    restart: always
    depends_on:
      - backend

  portainer:
    image: portainer/portainer-ce
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always
    deploy:
      mode: global

  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./docker-data/prometheus/:/etc/prometheus/
      - ./docker-data/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./docker-data/grafana:/etc/grafana/provisioning/datasources
